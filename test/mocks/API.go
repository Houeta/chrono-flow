// Code generated by mockery v2.52.2. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	telebot "gopkg.in/telebot.v4"
)

// API is an autogenerated mock type for the API type
type API struct {
	mock.Mock
}

// Handle provides a mock function with given fields: endpoint, h, m
func (_m *API) Handle(endpoint interface{}, h telebot.HandlerFunc, m ...telebot.MiddlewareFunc) {
	_va := make([]interface{}, len(m))
	for _i := range m {
		_va[_i] = m[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, endpoint, h)
	_ca = append(_ca, _va...)
	_m.Called(_ca...)
}

// Start provides a mock function with no fields
func (_m *API) Start() {
	_m.Called()
}

// Stop provides a mock function with no fields
func (_m *API) Stop() {
	_m.Called()
}

// NewAPI creates a new instance of API. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAPI(t interface {
	mock.TestingT
	Cleanup(func())
}) *API {
	mock := &API{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
